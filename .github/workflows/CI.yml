name: CI
on:
  push:
    branches:
      - trunk
    tags: '*'
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.7'
          - 'nightly'
        os:
          - ubuntu-latest
          # - macOS-latest
        arch:
          - x64
        exclude:
          - os: macOS-latest
            arch: x86
          - os: ubuntu-latest
            arch: x86
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Julia
        uses: julia-actions/setup-julia@v1
        env:
          cache-name: chache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - run: sudo apt-get update && sudo apt-get install -y xorg-dev mesa-utils xvfb libgl1 freeglut3-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      - run: DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24' julia --project=@. -e 'using Pkg; Pkg.test(coverage=true)'

      - uses: julia-actions/cache@v1

      - name: Build package
        uses: julia-actions/julia-buildpkg@v1

      - name: Process coverage
        uses: julia-actions/julia-processcoverage@v1

      - name: Upload coverage
        uses: coverallsapp/github-action@master
        with:
          path-to-lcov: lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run${{ matrix.os }}-${{ matrix.version }}-${{ matrix.arch }}
          parallel: true
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.7'
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using ImageSequenceAnnotationRecipes
            DocMeta.setdocmeta!(ImageSequenceAnnotationRecipes, :DocTestSetup, :(using ImageSequenceAnnotationRecipes); recursive=true)
            doctest(ImageSequenceAnnotationRecipes)'
  finish:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
